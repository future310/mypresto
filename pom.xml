<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.xuechao.mypresto</groupId>
	<artifactId>mypresto</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>mypresto</name>
	<url>http://maven.apache.org</url>

	<inceptionYear>2010</inceptionYear>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<air.check.skip-extended>true</air.check.skip-extended>
		<air.check.fail-all>false</air.check.fail-all>
		<air.check.fail-basic>true</air.check.fail-basic>
		<air.java.version>1.8.0-40</air.java.version>
		<dep.airlift.version>0.0.1-SNAPSHOT</dep.airlift.version>
		<dep.packaging.version>${dep.airlift.version}</dep.packaging.version>
		<!-- see http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.targetJdk>1.8</project.build.targetJdk>
		<project.report.outputEncoding>UTF-8</project.report.outputEncoding>
		<project.report.inputEncoding>UTF-8</project.report.inputEncoding>

		<!-- airlift build specific options are prefixed air.build. -->

		<!-- Default jvm size for compiler, tests etc. -->
		<air.build.jvmsize>1024m</air.build.jvmsize>

		<!-- whether a release:perform automatically pushes the created files and 
			tags to -->
		<!-- the upstream repository. Default is no. -->
		<air.release.push-changes>false</air.release.push-changes>

		<!-- define the forkmode for tests. Default is 'once' -->
		<air.test.fork-mode>once</air.test.fork-mode>

		<!-- define the thread count for parallel tests. -->
		<air.test.thread-count>1</air.test.thread-count>

		<!-- define the parallel mode for tests. Must be 'methods' for TestNG. -->
		<air.test.parallel />

		<!-- define the JVM timezone to use when running tests. Default is 'UTC. -->
		<air.test.timezone>UTC</air.test.timezone>

		<!-- define the JVM size for forked tests. Defaults to build JVM size. -->
		<air.test.jvmsize>${air.build.jvmsize}</air.test.jvmsize>

		<!-- Lint mode for Javadoc. Defaults to 'all'. -->
		<air.javadoc.lint>all</air.javadoc.lint>

		<!-- Controls all the checkers run when building the project. -->
		<!-- Can be activated with -Dair.check.skip-all=true on the command line. -->
		<air.check.skip-all>false</air.check.skip-all>
		<!-- Controls the basic checkers run when building the project. -->
		<air.check.skip-basic>${air.check.skip-all}</air.check.skip-basic>
		<!-- Controls the extended checkers run when building the project. -->
		<air.check.skip-extended>${air.check.skip-all}</air.check.skip-extended>

		<!-- basic checks -->
		<air.check.skip-enforcer>${air.check.skip-basic}</air.check.skip-enforcer>
		<air.check.skip-dependency>${air.check.skip-basic}</air.check.skip-dependency>
		<air.check.skip-duplicate-finder>${air.check.skip-basic}</air.check.skip-duplicate-finder>
		<air.check.skip-dependency-version-check>${air.check.skip-basic}</air.check.skip-dependency-version-check>

		<!-- extended checks -->
		<air.check.skip-findbugs>${air.check.skip-extended}</air.check.skip-findbugs>
		<air.check.skip-pmd>${air.check.skip-extended}</air.check.skip-pmd>
		<air.check.skip-license>${air.check.skip-extended}</air.check.skip-license>
		<air.check.skip-jacoco>${air.check.skip-extended}</air.check.skip-jacoco>

		<air.check.fail-all>true</air.check.fail-all>
		<air.check.fail-basic>${air.check.fail-all}</air.check.fail-basic>
		<air.check.fail-extended>${air.check.fail-all}</air.check.fail-extended>

		<!-- basic checks -->
		<air.check.fail-enforcer>${air.check.fail-basic}</air.check.fail-enforcer>
		<air.check.fail-dependency>${air.check.fail-basic}</air.check.fail-dependency>
		<air.check.fail-duplicate-finder>${air.check.fail-basic}</air.check.fail-duplicate-finder>
		<air.check.fail-dependency-version-check>${air.check.fail-basic}</air.check.fail-dependency-version-check>

		<!-- extended checks -->
		<air.check.fail-findbugs>${air.check.fail-extended}</air.check.fail-findbugs>
		<air.check.fail-pmd>${air.check.fail-extended}</air.check.fail-pmd>
		<air.check.fail-license>${air.check.fail-extended}</air.check.fail-license>

		<!-- minimum maven version to build -->
		<air.maven.version>3.2.3</air.maven.version>

		<!-- minimum Java version to build -->
		<air.java.version>${project.build.targetJdk}</air.java.version>

		<!-- In Multimodule builds, override this to point at the parent directory 
			for e.g. the license resources. -->
		<!-- See http://stackoverflow.com/questions/1012402/maven2-property-that-indicates-the-parent-directory -->
		<air.main.basedir>${project.basedir}</air.main.basedir>

		<!-- Plugin versions used in multiple places -->
		<dep.plugin.scm.version>1.8.1</dep.plugin.scm.version>

		<!-- Packaging for the tarball deployment -->
		<dep.packaging.version>0.91</dep.packaging.version>

		<!-- Dependency versions that should be the same everywhere. -->
		<dep.guice.version>4.0</dep.guice.version>
		<dep.guava.version>18.0</dep.guava.version>
		<dep.slf4j.version>1.7.12</dep.slf4j.version>
		<dep.logback.version>1.0.13</dep.logback.version>
		<dep.javax-inject.version>1</dep.javax-inject.version>
		<dep.javax-validation.version>1.1.0.Final</dep.javax-validation.version>
		<dep.javax-servlet.version>3.1.0</dep.javax-servlet.version>
		<dep.apache-bval.version>0.5</dep.apache-bval.version>
		<dep.jackson.version>2.4.4</dep.jackson.version>
		<dep.jersey.version>2.22.2</dep.jersey.version>
		<dep.jetty.version>9.3.9.M1</dep.jetty.version>
		<dep.jmxutils.version>1.19</dep.jmxutils.version>
		<dep.cglib.version>2.2.2</dep.cglib.version>
		<dep.joda.version>2.8.2</dep.joda.version>
		<dep.findbugs-annotations.version>2.0.3</dep.findbugs-annotations.version>
		<dep.testng.version>6.9.6</dep.testng.version>
		<dep.hamcrest.version>1.3</dep.hamcrest.version>
		<dep.mockito.version>1.9.5</dep.mockito.version>
		<dep.objenesis.version>1.3</dep.objenesis.version>
		<dep.slice.version>0.10</dep.slice.version>
		<dep.jmh.version>1.9.3</dep.jmh.version>

		<!-- license headers -->
		<air.license.owner>${project.organization.name}</air.license.owner>
		<air.license.default-value>Copyright (C) ${project.inceptionYear}
			${air.license.owner}</air.license.default-value>
		<air.license.ensure-match>Copyright \(C\) \d{4} .+</air.license.ensure-match>
	</properties>


	<modules>
		<module>configuration</module>
	</modules>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>io.airlift</groupId>
				<artifactId>configuration</artifactId>
				<version>${dep.airlift.version}</version>
			</dependency>

			<!-- Google Guice -->
			<dependency>
				<groupId>com.google.inject</groupId>
				<artifactId>guice</artifactId>
				<version>${dep.guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-servlet</artifactId>
				<version>${dep.guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-assistedinject</artifactId>
				<version>${dep.guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-multibindings</artifactId>
				<version>${dep.guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-throwingproviders</artifactId>
				<version>${dep.guice.version}</version>
			</dependency>

			<!-- guava -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${dep.guava.version}</version>
			</dependency>

			<!-- Java APIs -->
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>${dep.javax-inject.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${dep.javax-servlet.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${dep.javax-validation.version}</version>
			</dependency>

			<!-- logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${dep.slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-nop</artifactId>
				<version>${dep.slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${dep.slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-ext</artifactId>
				<version>${dep.slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${dep.slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${dep.slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${dep.slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-jdk14</artifactId>
				<version>${dep.slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${dep.logback.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${dep.logback.version}</version>
			</dependency>

			<!-- jersey -->
			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>2.0.1</version>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-common</artifactId>
				<version>${dep.jersey.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.glassfish.hk2.external</groupId>
						<artifactId>javax.inject</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.glassfish.hk2.external</groupId>
						<artifactId>aopalliance-repackaged</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-server</artifactId>
				<version>${dep.jersey.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.glassfish.hk2.external</groupId>
						<artifactId>javax.inject</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey.containers</groupId>
				<artifactId>jersey-container-servlet-core</artifactId>
				<version>${dep.jersey.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.glassfish.hk2.external</groupId>
						<artifactId>javax.inject</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey.containers</groupId>
				<artifactId>jersey-container-servlet</artifactId>
				<version>${dep.jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>javax.annotation-api</artifactId>
				<version>1.2</version>
			</dependency>

			<!-- jackson -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${dep.jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${dep.jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${dep.jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-module-parameter-names</artifactId>
				<version>${dep.jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jdk7</artifactId>
				<version>${dep.jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jdk8</artifactId>
				<version>${dep.jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
				<version>${dep.jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-guava</artifactId>
				<version>${dep.jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-joda</artifactId>
				<version>${dep.jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-smile</artifactId>
				<version>${dep.jackson.version}</version>
			</dependency>

			<!-- jetty -->
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-server</artifactId>
				<version>${dep.jetty.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.eclipse.jetty.orbit</groupId>
						<artifactId>javax.servlet</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlet</artifactId>
				<version>${dep.jetty.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-util</artifactId>
				<version>${dep.jetty.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlets</artifactId>
				<version>${dep.jetty.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-security</artifactId>
				<version>${dep.jetty.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-jmx</artifactId>
				<version>${dep.jetty.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-http</artifactId>
				<version>${dep.jetty.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-client</artifactId>
				<version>${dep.jetty.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-io</artifactId>
				<version>${dep.jetty.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.jetty.http2</groupId>
				<artifactId>http2-client</artifactId>
				<version>${dep.jetty.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.jetty.http2</groupId>
				<artifactId>http2-http-client-transport</artifactId>
				<version>${dep.jetty.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.jetty.http2</groupId>
				<artifactId>http2-server</artifactId>
				<version>${dep.jetty.version}</version>
			</dependency>

			<!-- misc stuff -->
			<dependency>
				<groupId>org.apache.bval</groupId>
				<artifactId>bval-jsr303</artifactId>
				<version>${dep.apache-bval.version}</version>
			</dependency>
			<dependency>
				<groupId>org.weakref</groupId>
				<artifactId>jmxutils</artifactId>
				<version>${dep.jmxutils.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${dep.joda.version}</version>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>${dep.cglib.version}</version>
			</dependency>

			<!-- findbugs -->
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>annotations</artifactId>
				<version>${dep.findbugs-annotations.version}</version>
			</dependency>

			<!-- jmh -->
			<dependency>
				<groupId>org.openjdk.jmh</groupId>
				<artifactId>jmh-core</artifactId>
				<version>${dep.jmh.version}</version>
			</dependency>

			<dependency>
				<groupId>org.openjdk.jmh</groupId>
				<artifactId>jmh-generator-annprocess</artifactId>
				<version>${dep.jmh.version}</version>
			</dependency>

			<!-- Testing -->
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${dep.testng.version}</version>
				<exclusions>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.google.inject</groupId>
						<artifactId>guice</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${dep.mockito.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>${dep.hamcrest.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>${dep.hamcrest.version}</version>
			</dependency>

			<dependency>
				<groupId>org.objenesis</groupId>
				<artifactId>objenesis</artifactId>
				<version>${dep.objenesis.version}</version>
			</dependency>

			<dependency>
				<groupId>io.airlift</groupId>
				<artifactId>slice</artifactId>
				<version>${dep.slice.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-invoker-plugin</artifactId>
					<version>1.8</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<configuration>
						<releaseProfiles>oss-release,airlift-release</releaseProfiles>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>airlift-release</id>
			<build>
				<plugins>
					<!-- When deploying artifacts through the invoker plugin, pass the oss-release -->
					<!-- profile through -->
					<plugin>
						<artifactId>maven-invoker-plugin</artifactId>
						<configuration>
							<profiles combine.children="append">
								<profile>oss-release</profile>
							</profiles>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>